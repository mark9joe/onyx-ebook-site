name: Generate News + RSS + Sitemap

on: push: branches: - main schedule: - cron: '0 * * * *'  # every minute

jobs: build: runs-on: ubuntu-latest

steps:
  - name: üîÑ Checkout code
    uses: actions/checkout@v3

  - name: üêç Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: '3.11'

  - name: üìÜ Install dependencies
    run: pip install requests

  - name: üì∞ Generate AMP Pages
    run: python scripts/generate_pages.py

  - name: üì¢ Build RSS Feed
    run: python scripts/build_rss.py

  - name: üó∫Ô∏è Build Sitemap
    run: python scripts/build_sitemap.py

  - name: üïí Touch file to force commit
    run: echo "Updated at $(date -u)" > last-updated.txt

  - name: ‚úÖ Commit & Push if changed
    run: |
      git config --global user.email "bot@respirework.com"
      git config --global user.name "RespireBot"
      git add .
      if ! git diff --cached --quiet; then
        git commit -m "ü§ñ Auto-update AMP pages, RSS, Sitemap"
        git push
      else
        echo "No changes to commit."
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  - name: ‚òÅÔ∏è Ping Google and Bing
    run: |
      curl https://www.google.com/ping?sitemap=https://respirework.com/sitemap.xml
      curl https://www.bing.com/ping?sitemap=https://respirework.com/sitemap.xml

  - name: üì£ Notify via Slack
    uses: slackapi/slack-github-action@v1.23.0
    with:
      payload: |
        {
          "text": "‚úÖ RespireWork: AMP pages, RSS & Sitemap updated and deployed."
        }
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  - name: üì≤ Notify via Telegram
    run: |
      curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
      -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
      -d text="‚úÖ RespireWork: AMP pages, RSS & Sitemap updated and deployed."

  - name: üöÄ Trigger Vercel Deployment
    run: |
      curl -X POST "https://api.vercel.com/v1/integrations/deploy/prj_YourProjectID/token=YourToken"
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

